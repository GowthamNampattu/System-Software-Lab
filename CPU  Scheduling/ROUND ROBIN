#include <stdio.h>

int main() {
    int n, i, time = 0, remain, flag = 0;
    int wt = 0, tat = 0, quantum;
    int arrivaltime[10], bursttime[10], rem_burst[10];

    printf("Enter number of processes: ");
    scanf("%d", &n);
     
    remain = n;
    
    for(i = 0; i < n; i++) {
        printf("Enter arrival time for process[%d]: ", i + 1);
        scanf("%d", &arrivaltime[i]);
        printf("Enter burst time for process[%d]: ", i + 1);
        scanf("%d", &bursttime[i]);
        rem_burst[i] = bursttime[i];
    }
    
    printf("Enter Time Quantum: ");
    scanf("%d", &quantum);

    printf("\nProcess\tArrivaltime\tBursttime\tWaitingtime\tTurnaroundtime\n");
    
    while(remain != 0) {
    flag = 0;
     for(i = 0; i < n; i++) {
      if(rem_burst[i] > 0 && arrivaltime[i] <= time) {
        if(rem_burst[i] <= quantum) {
           time += rem_burst[i];
             rem_burst[i] = 0;
              flag = 1;
                    
       int turnaround = time - arrivaltime[i];
      int waiting = turnaroundtime - bursttime[i];
                    
                    wt += waitingtime;
                    tat += turnaroundtime;
                    
                    printf("P%d\t%d\t%d\t%d\t%d\n", i + 1, arrivaltime[i], bursttime[i], waitingtime, turnaroundtime);
                    remain--;
                } else {
                    rem_burst[i] -= quantum;
                    time += quantum;
                    flag = 1;
                }
            }
        }
        
       
        if(flag == 0) {
            time++;
        }
    }
    
    printf("\nAverage Waiting Time = %.2f\n", (float)wt / n);
    printf("Average Turnaround Time = %.2f\n", (float)tat / n);

    return 0;
}
