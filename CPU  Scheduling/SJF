 #include <stdio.h>
 #include <stdbool.h>
int main() {
 int n;
 printf("Enter the number of processes: ");
 scanf("%d", &n);
int at[n], bt[n], ct[n], wt[n], tat[n], pid[n];
 bool completed[n];
 float avg_wt = 0, avg_tat = 0;
 printf("Enter Arrival Time for each process:\n");
    for (int i = 0; i < n; i++) {
 printf("Process %d: ", i + 1);
 scanf("%d", &at[i]);
 pid[i] = i + 1;
  completed[i] = false;
    }
printf("Enter Burst Time for each process:\n");
    for (int i = 0; i < n; i++) {
 printf("Process %d: ", i + 1);
 scanf("%d", &bt[i]);
    }
 int completedCount = 0, currentTime = 0;
 while (completedCount < n) {
        int idx = -1;
        int min_bt = 9999;
 for (int i = 0; i < n; i++) {
            if (!completed[i] && at[i] <= currentTime && bt[i] < min_bt) {
                min_bt = bt[i];
                idx = i;
            }
        }

   if (idx != -1) {

     currentTime += bt[idx];
ct[idx] = currentTime;
  tat[idx] = ct[idx] - at[idx];
  wt[idx] = tat[idx] - bt[idx];
   avg_wt += wt[idx];
  avg_tat += tat[idx];

    completed[idx] = true;
  completedCount++;
        }
else 
{
 currentTime++;
        }
    }

 printf("\nProcess\t\tArrival Tiime\t\tBurst Time\t\tCompletion Time\t\tTurn Around Time\t\tWaiting timeT \n");
    for (int i = 0; i < n; i++) {
        printf("%d\t\t%d\t\t\t%d\t\t\t\t%d\t\t%d\t\t\t\t%d\n",pid[i],at[i],bt[i],ct[i],tat[i],wt[i]);
    }

    printf("\nAverage Waiting Time = %.2f", avg_wt / n);
    printf("\nAverage Turnaround Time = %.2f\n", avg_tat / n);

    return 0;
}
